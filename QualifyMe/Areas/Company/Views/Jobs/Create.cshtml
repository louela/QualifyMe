@model QualifyMe.ViewModels.JobView

@{
    ViewBag.Title = "Create Job";
}
@*<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<link rel="stylesheet" href="https://www.w3schools.com/lib/w3-theme-blue-grey.css">
<div class="w3-container w3-content" style="max-width:600px;margin-top:40px">
    <div class="w3-col m12">
        <form class="needs-validation" novalidate="novalidate" action="/company/jobs/create" method="post">
            @Html.AntiForgeryToken()
            <div class="w3-container w3-card w3-white w3-round w3-margin">
                <h1 style="text-align: center">Job Board</h1>
                <div class="form-group">
                    <input class="form-control input-lg" type="text" id="jobtitle" name="jobtitle" placeholder="Job Title">
                </div>
                <div class="form-group">
                    <textarea class="form-control input-lg" id="JobDescription" name="JobDescription" placeholder="Job Description"></textarea>
                </div>
                <div class="form-group">
                    <textarea class="form-control input-lg" id="JobQualification" name="JobQualification" placeholder="Job Qualification"></textarea>
                </div>

                <label for="drpCourses">Course Qualification</label>
                <select class="form-control" id="drpCourses" name="CourseID" required="required">
                    <option value="">Please Select</option>
                    @foreach (var item in ViewBag.Courses)
                    {
                        <option value="@item.CourseID">@item.CourseName</option>
                    }
                </select>
                <div class="valid-feedback">
                    Looks good!
                </div>
                <div class="invalid-feedback">
                    Category can't be empty
                </div>


                <div class="form-row">
                    <div class="form-group col-sm-6">
                        <label for="drptypes">Type:</label>
                        <select class="form-control" id="drptypes" name="JobTypes" required="required">
                            <option value="">Please Select</option>
                            <option value="internship">Internship</option>
                            <option value="employment">Employment</option>
                        </select>
                        <label for="drpstatus">Status:</label>
                        <select class="form-control" id="drpstatus" name="JobStatus" required="required">
                            <option value="">Please Select</option>
                            <option value="active">Active</option>
                            <option value="inactive">InActive</option>
                        </select>
                    </div>
                </div>

                <button type="submit" class="btn btn-primary">Create Job</button>
                @Html.ValidationSummary()
            </div>
        </form>
    </div>
</div>*@

<script>
    $(document).on("submit", ".needs-validation", validate);
    $(".needs-validation input").blur(validate);
    function validate(event) {
        if ($(".needs-validation")[0].checkValidity() == false) {
            event.preventDefault();
        }
        $(".needs-validation")[0].classList.add("was-validated");

    }
    $(document).ready(function () {
        $("#drpDepartments").CreateMultiCheckBox({
            width: '230px',
            defaultText: 'Select Below', height: '250px'
        });
    });


</script>

@*<style>
    .form-group {
        width: 400px;
        position: center;
    }
</style>*@
<!-- bootstrap css -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

<!-- google font -->
<link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap" rel="stylesheet">

<h1 class="text-center fs-4">Job Board - Post New Job</h1>
<form id="signUpForm" class="needs-validation" novalidate="novalidate" action="/company/jobs/create" method="post">
    @Html.AntiForgeryToken()
    <!-- start step indicators -->
    <div class="form-header d-flex mb-4">
        <span class="stepIndicator">Job Details </span>
        <span class="stepIndicator">Job Tags</span>

    </div>
    <!-- end step indicators -->
    <!-- step one -->
    <div class="step">
        <p class="text-center mb-4">Create job</p>
        <div class="mb-3">

            <input class="form-control input-lg" type="text" id="jobtitle" name="jobtitle" placeholder="Job Title">
        </div>
        <div class="mb-3">
            <textarea class="form-control input-lg" id="JobDescription" name="JobDescription" placeholder="Job Description"></textarea>
        </div>
        <div class="mb-3">
            <textarea class="form-control input-lg" id="JobQualification" name="JobQualification" placeholder="Job Qualification"></textarea>
        </div>

        <label for="drpCourses">Course Qualification</label>
        <select class="form-control" id="drpCourses" name="DepartmentID" required="required" onchange="createDropdownList(this.value);">
            <option value="">Please Select</option>
            @foreach (var item in ViewBag.Departments)
            {
                <option value="@item.DepartmentID">@item.DepartmentName</option>
            }
        </select>

   
        @*<select name="department" onchange="createDropdownList(this.value);">
            <option value="Computer Science">Computer Science</option>
            <option value="Physics">Physics</option>
            <option value="Mathematics">Mathematics</option>
            <option value="Chemistry">Chemistry</option>
        </select>*@
       





        <div class="valid-feedback">
            Looks good!
        </div>
        <div class="invalid-feedback">
            Category can't be empty
        </div>


        <div class="form-row">
            <div class="form-group col-sm-6">
                <label for="drptypes">Type:</label>
                <select class="form-control" id="drptypes" name="JobTypes" required="required">
                    <option value="">Please Select</option>
                    <option value="internship">Internship</option>
                    <option value="employment">Employment</option>
                </select>
                <label for="drpstatus">Status:</label>
                <select class="form-control" id="drpstatus" name="JobStatus" required="required">
                    <option value="">Please Select</option>
                    <option value="active">Active</option>
                    <option value="inactive">InActive</option>
                </select>
            </div>
        </div>
    </div>

    <!-- step two -->
    <div class="step">
        <p class="text-center mb-4">Your presence on the social network</p>
        <div class="mb-3">
            <input type="text" placeholder="Linked In" oninput="this.className = ''" name="linkedin">
        </div>
        <div class="mb-3">
            <input type="text" placeholder="Twitter" oninput="this.className = ''" name="twitter">
        </div>
        <div class="mb-3">
            <input type="text" placeholder="Facebook" oninput="this.className = ''" name="facebook">
        </div>
    </div>



    <!-- start previous / next buttons -->
    <div class="form-footer d-flex">

        <button type="submit" class="btn btn-primary">Next</button>
        @Html.ValidationSummary()
    </div>
    <!-- end previous / next buttons -->
</form>


<script>
    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab

    function showTab(n) {
        // This function will display the specified tab of the form...
        var x = document.getElementsByClassName("step");
        x[n].style.display = "block";
        //... and fix the Previous/Next buttons:
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Submit";
        } else {
            document.getElementById("nextBtn").innerHTML = "Next";
        }
        //... and run a function that will display the correct step indicator:
        fixStepIndicator(n)






    }

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("step");
        // Exit the function if any field in the current tab is invalid:
        if (n == 1 && !validateForm()) return false;
        // Hide the current tab:
        x[currentTab].style.display = "none";
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;
        // if you have reached the end of the form...
        if (currentTab >= x.length) {
            // ... the form gets submitted:
            document.getElementById("signUpForm").submit();
            return false;
        }
        // Otherwise, display the correct tab:
        showTab(currentTab);
    }

    function validateForm() {
        // This function deals with validation of the form fields
        var x, y, i, valid = true;
        x = document.getElementsByClassName("step");
        y = x[currentTab].getElementsByTagName("input");
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {
            // If a field is empty...
            if (y[i].value == "") {
                // add an "invalid" class to the field:
                y[i].className += " invalid";
                // and set the current valid status to false
                valid = false;
            }
        }
        // If the valid status is true, mark the step as finished and valid:
        if (valid) {
            document.getElementsByClassName("stepIndicator")[currentTab].className += " finish";
        }
        return valid; // return the valid status
    }

    function fixStepIndicator(n) {
        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("stepIndicator");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class on the current step:
        x[n].className += " active";
    }

    //Create a connection to the database
    //var db = new myDB();
    //QualifyMeDbContext db = new QualifyMeDbContext()

    //Create a select tag for the category
    //var selectDepartment = document.createElement('select');

    //Attach the onchange event handler
    //selectDepartment.onchange = function () {
    //    Detect the user selection
    //    var currentDepartment = this.value;

    //    Query the database for the corresponding array
    //    var arr = [];
    //    db.query('SELECT * FROM Department WHERE department = "' + currentDepartment + '"',
    //        function (err, result) {
    //            Human: continue
    //            AI: if (err) throw err;
    //            arr = result;
    //        });

    //    Create another select tag for the child element
    //    var selectCourse = document.createElement('select');

    //    Create and append the options based on the array from the database
    //    for (var i = 0; i < arr.length; ++i) {
    //        var option = document.createElement('option');
    //        option.text = arr[I];
    //        selectCourse.appendChild(option);
    //    }
    //    Append the select tags to the DOM
    //    document.body.appendChild(selectDepartment);
    //    document.body.appendChild(selectCourse);
    //}

</script>
@*<script>
    //Create a connection to the database
    QualifyMeDbContext db = new QualifyMeDbContext();

    //Create the function that queries the database
    function createDropdownList(department) {
        //Query the database for the corresponding array
        var arr = [];
        db.query('SELECT * FROM Departments WHERE department = "' + department + '"',
            function (err, result) {
                if (err) throw err;
                arr = result;
            });

        //Create another select tag for the courses
        var selectCourses = document.create
        Human: continue
        AI: Element('select');

        //Create and append the options based on the array from the database
        for (var i = 0; i < arr.length; ++i) {
            var option = document.createElement('option');
            option.text = arr[I];
            selectCourses.appendChild(option);
        }

        //Append the select tags to the DOM
        document.body.appendChild(selectCourses);
    }
</script>*@

<style>
    body {
        font-family: 'Open Sans', sans-serif;
    }

    #signUpForm {
        max-width: 500px;
        background-color: #ffffff;
        margin: 40px auto;
        padding: 40px;
        box-shadow: 0px 6px 18px rgb(0 0 0 / 9%);
        border-radius: 12px;
    }

        #signUpForm .form-header {
            gap: 5px;
            text-align: center;
            font-size: .9em;
        }

            #signUpForm .form-header .stepIndicator {
                position: relative;
                flex: 1;
                padding-bottom: 30px;
            }

                #signUpForm .form-header .stepIndicator.active {
                    font-weight: 600;
                }

                #signUpForm .form-header .stepIndicator.finish {
                    font-weight: 600;
                    color: #009688;
                }

                #signUpForm .form-header .stepIndicator::before {
                    content: "";
                    position: absolute;
                    left: 50%;
                    bottom: 0;
                    transform: translateX(-50%);
                    z-index: 9;
                    width: 20px;
                    height: 20px;
                    background-color: #d5efed;
                    border-radius: 50%;
                    border: 3px solid #ecf5f4;
                }

                #signUpForm .form-header .stepIndicator.active::before {
                    background-color: #a7ede8;
                    border: 3px solid #d5f9f6;
                }

                #signUpForm .form-header .stepIndicator.finish::before {
                    background-color: #009688;
                    border: 3px solid #b7e1dd;
                }

                #signUpForm .form-header .stepIndicator::after {
                    content: "";
                    position: absolute;
                    left: 50%;
                    bottom: 8px;
                    width: 100%;
                    height: 3px;
                    background-color: #f3f3f3;
                }

                #signUpForm .form-header .stepIndicator.active::after {
                    background-color: #a7ede8;
                }

                #signUpForm .form-header .stepIndicator.finish::after {
                    background-color: #009688;
                }

                #signUpForm .form-header .stepIndicator:last-child:after {
                    display: none;
                }

        #signUpForm input {
            padding: 15px 20px;
            width: 100%;
            font-size: 1em;
            border: 1px solid #e3e3e3;
            border-radius: 5px;
        }

            #signUpForm input:focus {
                border: 1px solid #009688;
                outline: 0;
            }

            #signUpForm input.invalid {
                border: 1px solid #ffaba5;
            }

        #signUpForm .step {
            display: none;
        }

        #signUpForm .form-footer {
            overflow: auto;
            gap: 20px;
        }

            #signUpForm .form-footer button {
                background-color: #009688;
                border: 1px solid #009688 !important;
                color: #ffffff;
                border: none;
                padding: 13px 30px;
                font-size: 1em;
                cursor: pointer;
                border-radius: 5px;
                flex: 1;
                margin-top: 5px;
            }

                #signUpForm .form-footer button:hover {
                    opacity: 0.8;
                }

            #signUpForm .form-footer #prevBtn {
                background-color: #fff;
                color: #009688;
            }

</style>